{"id":"1aa35c78-e0e0-40f6-b006-d138a886dd5d","code":"sql_select_paginated","document_type":"node_type","data":{"code":"sql_select_paginated","name":"SQL Select Paginated","group":"Bases de datos","react_component_type":"MultiTargetNode","json_data_schema":"{\n    \"description\": \"Execute SQL select paginated\",\n    \"type\": \"object\",\n    \"required\": [\n        \"url\",\n        \"user\",\n        \"password\",\n        \"driver\",\n        \"query_from\",\n        \"query_header\",\n        \"query\",\n        \"pagesize\"\n    ],\n    \"properties\": {\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"url\": {\n            \"title\": \"URL\",\n            \"type\": \"string\"\n        },\n        \"user\": {\n            \"title\": \"Usuario\",\n            \"type\": \"string\"\n        },\n        \"password\": {\n            \"title\": \"Contraseña\",\n            \"type\": \"string\"\n        },\n        \"driver\": {\n            \"title\": \"Driver\",\n            \"type\": \"string\"\n        },\n        \"pagesize\": {\n            \"title\": \"Page size\",\n            \"type\": \"number\"\n        },\n        \"query_from\": {\n            \"title\": \"Query from\",\n            \"type\": \"string\",\n            \"enum\": [\n                \"BODY\",\n                \"HEADER\",\n                \"CONSTANT\"\n            ],\n            \"enumNames\": [\n                \"BODY\",\n                \"HEADER\",\n                \"CONSTANT\"\n            ]\n        },\n        \"query_header\": {\n            \"title\": \"Header for query\",\n            \"type\": \"string\"\n        },\n        \"query\": {\n            \"title\": \"Query\",\n            \"type\": \"string\"\n        },\n        \"query_params\": {\n            \"title\": \"Parámetros\",\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"code\",\n                    \"value\",\n                    \"scope\"\n                ],\n                \"properties\": {\n                    \"code\": {\n                        \"title\": \"Clave\",\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"title\": \"Valor\",\n                        \"type\": \"string\"\n                    },\n                    \"scope\": {\n                        \"title\": \"Ámbito\",\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"BODY\",\n                            \"HEADER\",\n                            \"CONSTANTE\"\n                        ],\n                        \"enumNames\": [\n                            \"BODY\",\n                            \"HEADER\",\n                            \"CONSTANTE\"\n                        ]\n                    }\n                }\n            }\n        }\n    }\n}","json_ui_schema":"{\n    \"ui:classNames\": \"row\",\n    \"url\": {\n        \"ui:classNames\": \"col-9\",\n        \"ui:help\": \"jdbc:[dialect]://[host]:[port]/[database]\"\n    },\n    \"type\": {\n        \"ui:classNames\": \"col-3\"\n    },\n    \"user\": {\n        \"ui:classNames\": \"col-4\"\n    },\n    \"password\": {\n        \"ui:classNames\": \"col-4\",\n        \"ui:widget\": \"password\"\n    },\n    \"driver\": {\n        \"ui:classNames\": \"col-4\",\n        \"ui:help\": \"com.mysql.jdbc.Driver\"\n    },\n    \"pagesize\": {\n        \"ui:classNames\": \"col-2\",\n        \"ui:help\": \"Size of the page of every step\"\n    },\n    \"query_from\": {\n        \"ui:classNames\": \"col-2\",\n        \"ui:help\": \"Where the query is defined: body, header or constant\"\n    },\n    \"query_header\": {\n        \"condition\": \"query_from=HEADER\",\n        \"ui:classNames\": \"col-6\",\n        \"ui:help\": \"The header where the query is defined\"\n    },\n    \"query\": {\n        \"condition\": \"query_from=CONSTANT\",\n        \"ui:classNames\": \"col-12\",\n        \"ui:widget\": \"AceEditorWidget\",\n        \"ui:mode\": \"sql\",\n        \"ui:beautify\": true,\n        \"ui:height\": 150\n    }\n}","xml_template":"<route  id=\"{{source}}\">\n    <from uri=\"direct:{{source}}\"/>\n    {{applyUnmarshal input_format input_format_options}}\n    <setHeader name=\"sqlcontinue\">\n        <constant>\n            true\n        </constant>\n    </setHeader>\n    <loop doWhile=\"true\" copy=\"true\">\n        <simple>\n            ${header.sqlcontinue}\n        </simple>\n        <setBody>\n            <groovy>\n<![CDATA[\nimport java.sql.*; \nimport groovy.sql.Sql;\nimport java.sql.Driver;\nimport groovy.json.JsonSlurper;\nimport groovy.json.JsonOutput;\n\ndef driver = Class.forName(\"{{safe driver}}\").newInstance() as Driver\n\njava.util.Properties info = new java.util.Properties();\ninfo.put(\"user\", \"{{safe user}}\");\ninfo.put(\"password\", \"{{safe password}}\");\n\ndef connection = driver.connect(\"{{safe url}}\", info);\n\ndef sql = Sql.newInstance(connection)\n\ndef result;\n\njsonBody = JsonOutput.toJson(request.getBody())\ndef parserJson = new JsonSlurper()\ndef body = parserJson.parseText(jsonBody)\n\ndef queryParams = [:]\ndef counterParams = 0;\nfor (paramvalue in {{groovyList query_params}}) {\n    def item = [:]\n    if (paramvalue.scope == \"BODY\") {\n        queryParams[paramvalue.code] = body[paramvalue.value];\n    } else if (paramvalue.scope == \"HEADER\") {\n        queryParams[paramvalue.code] = exchange.getIn().getHeaders().get(paramvalue.value);\n    } else {\n        queryParams[paramvalue.code] = paramvalue.value;\n    }\n}\n\ndef queryString = \"\";\n{{#if (eq query_from \"BODY\")}}\n    queryString = request.getBody()\n{{/if}}\n{{#if (eq query_from \"HEADER\")}}\n    queryString = request.getHeaders().get(\"{{safe query_header}}\")\n{{/if}}\n{{#if (eq query_from \"CONSTANT\")}}\n    queryString = {{safe query}}\n{{/if}}\n\nresult = [];\ndef counter = 0;\nsql.eachRow(queryString, queryParams, (exchange.getProperty('CamelLoopIndex') * {{safe pagesize}}) + 1, {{safe pagesize}}){ row ->\n    def item = [:]\n    (1..row.getMetaData().columnCount).each {\n        item[\"${row.getMetaData().getColumnName( it )}\"] = row[ it - 1 ];\n    }\n    result.add(item);\n    counter++;\n}\nif (counter == 0) {\n    request.setHeader(\"sqlcontinue\", \"false\");\n}\n\nsql.close()\nreturn result;\n]]>\n        \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            </groovy>\n        </setBody>\n        <choice>\n            <when>\n                <simple>\n                    ${header.sqlcontinue} == 'true'\n                </simple>\n                {{generateDestination handles.[0].to}}\n            </when>\n        </choice>\n    </loop>\n    {{applyMarshal output_format output_format_options}}\n    {{generateDestination handles.[1].to}}\n</route>","defaults":"{\n    \"handles\": [\n        {\n            \"id\": \"out0\",\n            \"to\": \"\",\n            \"title\": \"Iteraciones\",\n            \"color\": \"blue\"\n        },\n        {\n            \"id\": \"out1\",\n            \"to\": \"\",\n            \"title\": \"Fin búcle\",\n            \"color\": \"red\"\n        }\n    ],\n    \"query_from\": \"CONSTANT\",\n    \"pagesize\": 10,\n    \"query\": \"\",\n    \"input_format\": \"raw\",\n    \"output_format\": \"raw\"\n}","id":"1aa35c78-e0e0-40f6-b006-d138a886dd5d","filename":"sql_select_paginated.json"},"package_code":null,"package_version":null}